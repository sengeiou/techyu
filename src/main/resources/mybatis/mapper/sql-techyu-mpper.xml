<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.techyu.dto.TechyuDao">

     <!-- 사용자 리스트 
     -->
	 <select id="memberList" parameterType="java.util.HashMap" resultType="kr.co.techyu.model.User">
	        
	        /* kr.co.techyu.model.User 
	        	사용자 리스트 
			*/
			
	        SELECT  @rownum := @rownum+1 AS rnum
	               ,UUID               AS uuid             
	               ,EMAIL              AS email            
	               ,PASSWORD           AS password         
	               ,USERNAME           AS username         
	               ,NICKNAME           AS nickname         
	               ,GRADE              AS grade            
	               ,PHONE              AS phone            
	               ,EMAIL_CERT         AS emailCert        
	               ,REGISTER_DATETIME  AS registerDatetime 
	               ,LASTLOGIN_DATETIME AS lastloginDatetime
	               ,LASTLOGIN_IP       AS lastloginIp      
	               ,IS_ADMIN           AS isAdmin          
	               ,ADMINMEMO          AS adminmemo        
	               ,CREATE_DATETIME    AS createDatetime   
	               ,CREATE_USER        AS createUser       
	               ,UPDATE_DATETIME    AS updateDatetime   
	               ,UPDATE_USER        AS updateUser 
	        FROM    MEMBER
	               ,(SELECT @rownum := 0) AS R
	        WHERE 1 = 1
	        <if test='uuid != null'>
	          AND UUID = #{uuid}
	        </if>
	        <if test='email != null'>
	          AND EMAIL = #{email}
	        </if>
	        <if test='password != null'>
	          AND PASSWORD = #{password}
	        </if>
	          ORDER BY CREATE_DATETIME DESC
	 </select>
    
     <!-- 사용자 추가 
     -->
	<insert id="updateUser" parameterType="map">
	   INSERT INTO
	      MEMBER (  UUID
	               ,EMAIL              
	               ,PASSWORD           
	               ,USERNAME           
	      )
	   VALUES (     #{uuid}
	               ,#{email}
	               ,#{password}
	               ,#{username}
	   )
	   ON
	      DUPLICATE KEY
	   UPDATE
	               ,EMAIL              = #{email}            
	               ,PASSWORD           = #{password}         
	               ,USERNAME           = #{username}         
	               ,NICKNAME           = #{nickname}         
	               ,GRADE              = #{grade}            
	               ,PHONE              = #{phone}            
	               ,EMAIL_CERT         = #{emailCert}        
	               ,REGISTER_DATETIME  = #{registerDatetime} 
	               ,LASTLOGIN_DATETIME = #{lastloginDatetime}
	               ,LASTLOGIN_IP       = #{lastloginIp}      
	               ,IS_ADMIN           = #{isAdmin}          
	               ,ADMINMEMO          = #{adminmemo}        
	               ,UPDATE_USER        = now()   
	               ,UPDATE_DATETIME    = #{updateDatetime}   
		WHERE 	UUID = #{uuid}             
	</insert>  
    
     <!-- 사용자 추가 
     -->
	<insert id="updateUser" parameterType="map">
	   INSERT INTO
	      MEMBER (  UUID
	               ,EMAIL              
	               ,PASSWORD           
	               ,USERNAME           
	               ,NICKNAME           
	               ,GRADE              
	               ,PHONE              
	               ,EMAIL_CERT         
	               ,REGISTER_DATETIME  
	               ,LASTLOGIN_DATETIME 
	               ,LASTLOGIN_IP       
	               ,IS_ADMIN           
	               ,ADMINMEMO          
	               ,CREATE_USER        
	               ,CREATE_DATETIME    
	               ,UPDATE_USER        
	               ,UPDATE_DATETIME    
	      )
	   VALUES (     #{uuid}
	               ,#{email}
	               ,#{password}
	               ,#{username}
	               ,#{nickname}
	               ,#{grade}
	               ,#{phone}
	               ,#{emailCert}
	               ,#{registerDatetime}
	               ,#{lastloginDatetime}
	               ,#{lastloginIp}
	               ,#{isAdmin}
	               ,#{adminmemo}
	               ,#{createUser}
	               ,now()
	               ,#{updateUser}
	               ,now()
	   )
	   ON
	      DUPLICATE KEY
	   UPDATE
	               ,EMAIL              = #{email}            
	               ,PASSWORD           = #{password}         
	               ,USERNAME           = #{username}         
	               ,NICKNAME           = #{nickname}         
	               ,GRADE              = #{grade}            
	               ,PHONE              = #{phone}            
	               ,EMAIL_CERT         = #{emailCert}        
	               ,REGISTER_DATETIME  = #{registerDatetime} 
	               ,LASTLOGIN_DATETIME = #{lastloginDatetime}
	               ,LASTLOGIN_IP       = #{lastloginIp}      
	               ,IS_ADMIN           = #{isAdmin}          
	               ,ADMINMEMO          = #{adminmemo}        
	               ,UPDATE_USER        = now()   
	               ,UPDATE_DATETIME    = #{updateDatetime}   
		WHERE 	UUID = #{uuid}             
	</insert>    
    
</mapper>
